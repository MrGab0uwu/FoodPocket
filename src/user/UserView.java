package user;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import utilities.JLabelImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import mysql.MysqlConnection;

public class UserView extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form user_view
     */
    MysqlConnection conexcion = new MysqlConnection();
    Connection conn = conexcion.getConection();

    @Override
    public void run() {
        initComponents();
        setLocationRelativeTo(this);
        setResizable(false);
        showRecipes();
        setVisible(true);
    }

    public UserView() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        searchBar = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnAdd1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Body = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header.setBackground(new java.awt.Color(230, 230, 230));

        searchBar.setBackground(new java.awt.Color(35, 61, 76));
        searchBar.setFont(new java.awt.Font("Open Sauce Sans", 0, 14)); // NOI18N
        searchBar.setForeground(new java.awt.Color(255, 255, 255));

        btnAdd.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("X");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAdd1.setText("Recargar");
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, -1));

        jScrollPane1.setBackground(new java.awt.Color(230, 230, 230));
        jScrollPane1.setBorder(null);

        Body.setBackground(new java.awt.Color(230, 230, 230));

        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 957, Short.MAX_VALUE)
        );
        BodyLayout.setVerticalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 956, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(Body);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 970, 450));
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        UploadForm upload = new UploadForm();
        upload.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String receta = searchBar.getText();
        searchRecipies(receta);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
       showRecipes();
    }//GEN-LAST:event_btnAdd1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserView().setVisible(true);
            }
        });
    }

    public void showRecipes() {
        Body.removeAll();
        try {

            PreparedStatement ps;
            ResultSet res;
            ps = conn.prepareStatement("SELECT * FROM Receta");
            res = ps.executeQuery();

            renderRecipies(res);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    public void searchRecipies(String recipie) {
        Body.removeAll();

        try {

            PreparedStatement ps;
            ResultSet res;
            ps = conn.prepareStatement("SELECT * FROM Receta WHERE nombre = '" + recipie + "'");
            res = ps.executeQuery();

            renderRecipies(res);

        } catch (SQLException ex) {
            System.out.println("muelto");
        }
    }

    public void renderRecipies(ResultSet res) throws SQLException {
        int x = 60;
        int y = 30;
        int i = 1;
        if (!res.next()) {
            JOptionPane.showMessageDialog(null, "No se encontraron coincidencias");
        } else {
            do {
                JPanel foodCard = new JPanel();
                JLabel ICON_FOOD = new JLabel();
                JLabel LABEL_NAME = new JLabel();
                JTextArea LABEL_DESCRIPTION = new JTextArea(3,20);
                JComponent[] card = {foodCard, ICON_FOOD, LABEL_NAME, LABEL_DESCRIPTION};
                try {
                    BufferedImage buffimg = null;
                    byte[] image = null;
                    image = res.getBytes("url_imagen");
                    // Lee la imagen como InputStream
                    InputStream img = res.getBinaryStream(5);
                    buffimg = ImageIO.read(img);
                    JLabelImage icon = new JLabelImage();
                    ICON_FOOD.setSize(250, 180);
                    icon.scalelImageMysql(buffimg, ICON_FOOD);
                } catch (IOException ex) {
                    Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                }

                foodCard.setBackground(new java.awt.Color(255, 255, 255));
                LABEL_NAME.setText(res.getString("nombre"));
                LABEL_NAME.setName(res.getString("id"));
                
                LABEL_DESCRIPTION.setLineWrap(true);
                LABEL_DESCRIPTION.setText(res.getString("descripcion"));
                LABEL_DESCRIPTION.setName(res.getString("id"));
                
                ICON_FOOD.setName(res.getString("id"));
                foodCard.setName(res.getString("id"));

                foodCard.add(ICON_FOOD);
                foodCard.add(LABEL_NAME);
                foodCard.add(LABEL_DESCRIPTION);
                foodCard.setBounds(x, y, 260, 280);

                for (JComponent c : card) {
                    c.addMouseListener(new MouseAdapter() {

                        int id = Integer.parseInt(res.getString("id"));

                        @Override
                        public void mouseClicked(MouseEvent e) {
                            FoodTemplate view = new FoodTemplate(conn, id);
                            Thread hilo = new Thread(view);
                            hilo.start();
                            try {
                                hilo.join();
                            } catch (InterruptedException ex) {
                                Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            view.setVisible(true);
                        }
                    });
                }
                Body.add(foodCard);
                invalidate();
                validate();
                repaint();

                if (i % 3 == 0) {
                    y += 290;
                    x = 60;
                } else {
                    x += 290;
                }
                i++;
            } while (res.next());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Header;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd1;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBar;
    // End of variables declaration//GEN-END:variables
}
